name: Rust

on:
  workflow_dispatch:
  push:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always
  appname: ${{ secrets.DEPLOY_APP }} # CodeDeploy App Name
  deploy-group: ${{ secrets.DEPLOY_GROUP }} # CodeDeploy group name
  s3-bucket: ${{ secrets.DEPLOY_BUCKET }} # Name of s3 bucket
  s3-filename: xx-url-shortner-${{ github.sha }} # Filename you want to store binary as

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up cargo cache
        uses: actions/cache@v3
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-
      - name: Build
        run: cargo build --release
      - name: Setup Deploy
        run: |
          mkdir deploy && \
          cp ./target/release/rust_url_shortner ./deploy/url_shortner && \
          cp ./appspec.yml ./deploy/appspec.yml && \
          cp ./scripts/runapp.sh ./deploy/runspp.sh && \
          cp ./scripts/stopapp.sh ./deploy/stopapp.sh && \
          sed -i '' 's/^export DATABASE_URL=.*/export DATABASE_URL=${{ secrets.DB_URL }}/' ./deploy/runapp.sh && \
          cat ./deploy/runapp.sh

      # - name: Install AWS CLI 2
      #   run: |
      #     curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install --update
      # # Configure AWS credentials
      # - name: Configure AWS credentials
      #   uses: aws-actions/configure-aws-credentials@v1
      #   with:
      #     aws-access-key-id: ${{ secrets.CODE_DEPLOYER_AWS_ACCESS_KEY }}
      #     aws-secret-access-key: ${{ secrets.CODE_DEPLOYER_AWS_SECRET_KEY }}
      #     aws-region: us-east-1

      # # Push deployment plan to S3
      # - name: AWS Deploy Push
      #   run: |
      #     aws deploy push \
      #     --application-name ${{ env.appname }} \
      #     --description "This is a revision for the ${{ env.appname }}-${{ github.sha }}" \
      #     --ignore-hidden-files \
      #     --s3-location s3://${{ env.s3-bucket }}/${{ env.s3-filename }}.zip \
      #     --source ./deploy
      # # Create deployment to CodeDeploy
      # - name: AWS Create Deployment
      #   run: |
      #     aws deploy create-deployment \
      #       --application-name ${{ env.appname }} \
      #       --deployment-config-name CodeDeployDefault.OneAtATime \
      #       --deployment-group-name ${{ env.deploy-group }} \
      #       --file-exists-behavior OVERWRITE \
      #       --s3-location bucket=${{ env.s3-bucket }},key=${{ env.s3-filename }}.zip,bundleType=zip \
